/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.client.interfaces;

import java.util.List;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.JFrame;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.rmi.service.interfaces.FireAlarmServiceInterface;
import com.client.java.SendEmail;
import com.client.java.TableRowColor;
import com.models.AllFireAlarmSensorsDetails;
import com.models.CreatedFireAlarmSensorDetails;
import com.models.FireAlarmSensor;
import com.rmi.client.Client;

/**
 *
 * @author Akila Mihiranga
 */
public class mainDashboardFrame extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form mainDashboardFrame
     */
	//create constructor.
	//call getFireAlarmServiceInterface client object to get rmi server connection.
	//create new List.
	
	private Client client = new Client();
    private FireAlarmServiceInterface fireAlarmServiceInterface = null;
	private List<FireAlarmSensor> AlarmList;
	
    public mainDashboardFrame() {
        initComponents();
        this.fireAlarmServiceInterface = client.getFireAlarmServiceInterface();
        this.getAllFireAlarmListAndSetTable(); //call table load method.
        this.refreshTable();  //call table refreshed method.
        this.setLocationRelativeTo(null);
    }
    
    //implement table load method.
    public void getAllFireAlarmListAndSetTable() {
    	
    	try {
    		//create AllFireAlarmSensorsDetails for get responses.
    		//call the getAllFireAlarmSensorDetails method in the remote interface.
    		AllFireAlarmSensorsDetails allFireAlarmSensorsDetails = this.fireAlarmServiceInterface.getAllFireAlarmSensorDetails();
    		//then get the status and assign in to list.
        	this.AlarmList = allFireAlarmSensorsDetails.getData();
        	//print the status.
        	System.out.println(allFireAlarmSensorsDetails.getStatus());
        	
        	//set table column names.
        	String[] column = {"ID", "Sensor Code", "Floor Number", "Room Number", "Smoke Level", "CO2 Level", "Alarm Status"};
        	//set that column names in default table model.
            final DefaultTableModel model = new DefaultTableModel(column, 0);
            
            //run for loop to add Alarm List details into row by row.
            for (FireAlarmSensor sensor : this.AlarmList) {
            	//get values in yhe list one by one and assign to row variable.
            	Object[] row = {sensor.get_id(), sensor.getSensorCode(), sensor.getFloorNumber(), sensor.getRoomNumber(), sensor.getSmokeLevel(), sensor.getCo2Level(), sensor.isStatus()};
            	//set row in the table model.
            	model.addRow(row);
            	
            	//if smoke level or CO2 level grater than 5, send email to admin.
            	if(sensor.getSmokeLevel() > 5 || sensor.getCo2Level() > 5) {
            		//pass email address and floor number and room number.
            		SendEmail.sendMail("akilamihiranga484@gmail.com", sensor.getFloorNumber(), sensor.getRoomNumber());
            	}
            	//if smoke level or CO2 level less than 5, print fine message.
            	else {
            		System.out.println("Sensors OK!");
            	}
            }
            //set model to table
            AlarmListTable.setModel(model);
            
            //create TableRowColor new object.
            TableRowColor renderer = new TableRowColor();
            //render the table values design.
            AlarmListTable.setDefaultRenderer(Object.class, renderer);
        	
            //handle exceptions
    	} catch (Exception e) {
    		System.out.println(e);
		}
    }
    
  //implement table refreshed method.
    public void refreshTable() {
    	Timer time = new Timer();
		TimerTask timerTask = new TimerTask() {
			@Override
			public void run() {
				getAllFireAlarmListAndSetTable(); // call table details load method.
				System.out.println("Table Refreshed.!"); //print message.
			};
		};
		time.scheduleAtFixedRate(timerTask, 15000, 15000); //in every 15 seconds, table refreshed.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        addDetailsBtn = new javax.swing.JButton();
        updateDetailsBtn = new javax.swing.JButton();
        deleteDetailBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AlarmListTable = new javax.swing.JTable();
        tableRefreshBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtID = new javax.swing.JLabel();
        txtSensorCode = new javax.swing.JTextField();
        txtFloorNo = new javax.swing.JTextField();
        txtRoomNo = new javax.swing.JTextField();
        txtSmokeLevel = new javax.swing.JSpinner();
        txtCO2Level = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        clearFieldsBtn = new javax.swing.JButton();
        txtStatus = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        logoutBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel5.setBackground(new java.awt.Color(0, 0, 51));

        jPanel1.setBackground(new java.awt.Color(204, 0, 0));

        jLabel1.setFont(new java.awt.Font("Algerian", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Fire Alarm Monitoring System");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/img/alarm2.jpg"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/client/img/alarm2.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1))
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        addDetailsBtn.setBackground(new java.awt.Color(102, 153, 255));
        addDetailsBtn.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        addDetailsBtn.setText("ADD");
        addDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDetailsBtnActionPerformed(evt);
            }
        });

        updateDetailsBtn.setBackground(new java.awt.Color(102, 153, 255));
        updateDetailsBtn.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        updateDetailsBtn.setText("UPDATE");
        updateDetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDetailsBtnActionPerformed(evt);
            }
        });

        deleteDetailBtn.setBackground(new java.awt.Color(102, 153, 255));
        deleteDetailBtn.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        deleteDetailBtn.setText("DELETE");
        deleteDetailBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDetailBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addDetailsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateDetailsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteDetailBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(addDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(updateDetailsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(deleteDetailBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));
        
        AlarmListTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null}
                },
                new String [] {
                    "ID", "Sensor Code", "Floor Number", "Room Number", "Smoke Level", "CO2 Level", "Alarm Status"
                }
            ));

        AlarmListTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AlarmListTable.setRowHeight(36);
        AlarmListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AlarmListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(AlarmListTable);

        tableRefreshBtn.setBackground(new java.awt.Color(102, 153, 255));
        tableRefreshBtn.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        tableRefreshBtn.setText("REFRESH TABLE");
        tableRefreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableRefreshBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tableRefreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tableRefreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel4.setText("ID");

        txtID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtID.setText("00000000000000000");

        txtSensorCode.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        txtFloorNo.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        txtRoomNo.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N

        txtSmokeLevel.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtSmokeLevel.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        txtCO2Level.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtCO2Level.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        jPanel7.setBackground(new java.awt.Color(0, 0, 51));

        jLabel12.setFont(new java.awt.Font("Trajan Pro 3", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Update Details");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel6.setText("Floor Number");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel7.setText("Room Number");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel8.setText("Smoke Level");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel5.setText("Sensor Code");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel9.setText("CO2 Level");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        jLabel10.setText("Alarm Status");

        clearFieldsBtn.setBackground(new java.awt.Color(102, 153, 255));
        clearFieldsBtn.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        clearFieldsBtn.setText("CLEAR FIELDS");
        clearFieldsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsBtnActionPerformed(evt);
            }
        });

        txtStatus.setFont(new java.awt.Font("Times New Roman", 0, 22)); // NOI18N
        txtStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "false", "true" }));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtSensorCode, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRoomNo)
                                    .addComponent(txtSmokeLevel, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                                    .addComponent(txtCO2Level)
                                    .addComponent(txtFloorNo)
                                    .addComponent(txtStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(clearFieldsBtn))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtID))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSensorCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFloorNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSmokeLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCO2Level, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addComponent(clearFieldsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));

        logoutBtn.setBackground(new java.awt.Color(102, 153, 255));
        logoutBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logoutBtn.setText("LOGOUT");
        logoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(logoutBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteDetailBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteDetailBtnActionPerformed
        
    	//if any field is empty,show message error message.
    	if (txtID.getText().equals("00000000000000000") || txtSensorCode.getText().equals("") || txtFloorNo.getText().equals("") || txtRoomNo.getText().equals("") || 
    			txtSmokeLevel.getValue().toString().equals("") || txtCO2Level.getValue().toString().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Required Fields are Empty OR Invalid Data", "Empty Fields", JOptionPane.WARNING_MESSAGE);
        } 
        else {
        	//Asking confirmation for delete the record.
            int x = JOptionPane.showConfirmDialog(null, "Do You Really Want to Delete this Record.?");
            
            //if click yes, s value is 0, click no, s value is 1.
            if (x == 0) {
            	//get id field value and assign into variable.
                String id = txtID.getText();

                try {
                	//create CreatedFireAlarmSensorDetails for get responses.
            		//call the deleteFireAlarmSensor method in the remote interface and pass id.
                	CreatedFireAlarmSensorDetails deleteFireAlarmSensor = this.fireAlarmServiceInterface.deleteFireAlarmSensor(id);
                	//then get the status and assign in to variable.
                	String checkStatus = deleteFireAlarmSensor.getStatus();
                	
                	//if status "Success",that means Alarm Deleted successful.
                	if(checkStatus.equalsIgnoreCase("Success")) {
                		this.getAllFireAlarmListAndSetTable(); //call table load method to refreshed the table.
                		this.clearFields(); //clear fields.
                		
                		//show delete successful message
                		JOptionPane.showMessageDialog(rootPane, "Fire Alarm Deleted Successfully", "Delete Fire Alarm", JOptionPane.INFORMATION_MESSAGE);
                        
                   } else {
                	   //if status was "Error",show error message.
                	   JOptionPane.showMessageDialog(rootPane, "Data Not Deleted", "Delete Fire Alarm", JOptionPane.ERROR_MESSAGE);;
                   }

                } catch (Exception e) {
                	System.out.println(e);
                }
            }
            else{
            	//if user click no or cancel,show error message.
                JOptionPane.showMessageDialog(rootPane, "Data Not Deleted", "Delete Fire Alarm Details", JOptionPane.ERROR_MESSAGE);
            }
        }
    	
    }//GEN-LAST:event_deleteDetailBtnActionPerformed

    private void addDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDetailsBtnActionPerformed
    	//User click ADD button,then show add new alarm sensor form user interface.
        addAlarmSensorFrame addAlarm = new addAlarmSensorFrame();
        addAlarm.setVisible(true);
        addAlarm.setLocationRelativeTo(null);
        addAlarm.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_addDetailsBtnActionPerformed

    private void updateDetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDetailsBtnActionPerformed
    	//if any field is empty,show message error message.
    	if (txtID.getText().equals("00000000000000000") || txtSensorCode.getText().equals("") || txtFloorNo.getText().equals("") || txtRoomNo.getText().equals("") || 
    			txtSmokeLevel.getValue().toString().equals("") || txtCO2Level.getValue().toString().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Required Fields are Empty OR Invalid Data", "Empty Fields", JOptionPane.WARNING_MESSAGE);
        }
        else {
        	//if click yes, s value is 0, click no, s value is 1.
            int x = JOptionPane.showConfirmDialog(null, "Do You Really Want to Update.?");

            //if click yes, s value is 0, click no, s value is 1.
            if (x == 0) {
            	//get input fields value and assign into variables.
                String id = txtID.getText();
                String uSensorCode = txtSensorCode.getText();
                int uFloorNo = Integer.parseInt(txtFloorNo.getText());
                int uRoomNo = Integer.parseInt(txtRoomNo.getText());
                int uSmokeLevel = (int) txtSmokeLevel.getValue();
                int uCO2Level = (int) txtCO2Level.getValue();
                boolean uStatus;
                //if smoke level or CO2 level grater than 5,set status as "true".
                if(uSmokeLevel > 5 || uCO2Level > 5) {
                	uStatus = Boolean.parseBoolean("true");
                }
                //if smoke level or CO2 level less than 5,set status as "false".
                else {
                	uStatus = Boolean.parseBoolean("false");
                }
                
                //create new FireAlarmSensor object and set values
                FireAlarmSensor updateAlarm = new FireAlarmSensor();
                updateAlarm.setSensorCode(uSensorCode); //set sensor code.
                updateAlarm.setFloorNumber(uFloorNo); //set floor number.
                updateAlarm.setRoomNumber(uRoomNo); //set room number.
                updateAlarm.setSmokeLevel(uSmokeLevel); // set smoke level.
                updateAlarm.setCo2Level(uCO2Level); //set CO2 level.
                updateAlarm.setStatus(uStatus); //set status.

                try {
                	//create CreatedFireAlarmSensorDetails for get responses.
            		//call the updateFireAlarmSensor method in the remote interface and pass updateAlarm object and id.
                	CreatedFireAlarmSensorDetails updateFireAlarmSensor = this.fireAlarmServiceInterface.updateFireAlarmSensor(updateAlarm, id);
                	//then get the status and assign in to variable.
                	String checkStatus = updateFireAlarmSensor.getStatus();
                	
                	//if status "Success",that means Alarm Updated successful.
                	if(checkStatus.equalsIgnoreCase("Success")) {
                		this.getAllFireAlarmListAndSetTable();  //call table load method to refreshed the table.
                		
                		//show update successful message
                		JOptionPane.showMessageDialog(rootPane, "Fire Alarm Updated Successfully", "Update Fire Alarm", JOptionPane.INFORMATION_MESSAGE);
                        
                   } else {
                	   //if status was "Error",show error message.
                	   JOptionPane.showMessageDialog(rootPane, "Data Not Updated", "Update Fire Alarm", JOptionPane.ERROR_MESSAGE);;
                   }

                } catch (Exception e) {
                	System.out.println(e);
                }
            }
            else{
            	//if user click no or cancel,show error message.
                JOptionPane.showMessageDialog(rootPane, "Data Not Updated", "Update Fire Alarm Details", JOptionPane.ERROR_MESSAGE);
            }
        }
    	
    }//GEN-LAST:event_updateDetailsBtnActionPerformed

    private void AlarmListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlarmListTableMouseClicked
        
    	try {
    		//get user clicked table row number and assign to variable.
    		int row = AlarmListTable.getSelectedRow();

    		//get row values and assign to variables
            String tId = AlarmListTable.getValueAt(row, 0).toString();
            String tSensorCode = AlarmListTable.getValueAt(row, 1).toString();
            String tFloorNo = AlarmListTable.getValueAt(row, 2).toString();
            String tRoomNo = AlarmListTable.getValueAt(row, 3).toString();
            int tSmokeLevel = (int) AlarmListTable.getValueAt(row, 4);
            int tCO2Level = (int) AlarmListTable.getValueAt(row, 5);
            String tStatus = AlarmListTable.getValueAt(row, 6).toString();

            //set data into input fields
            txtID.setText(tId);
            txtSensorCode.setText(tSensorCode);
            txtFloorNo.setText(tFloorNo);
            txtRoomNo.setText(tRoomNo);
            txtSmokeLevel.setValue(tSmokeLevel);
            txtCO2Level.setValue(tCO2Level);
            txtStatus.setSelectedItem(tStatus);
		} catch (Exception e) {
			System.out.println(e);
		}
    	
    }//GEN-LAST:event_AlarmListTableMouseClicked

    private void clearFieldsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsBtnActionPerformed
        //if user clicked clear fields button,then clear fields.
    	this.clearFields();
    	
    }//GEN-LAST:event_clearFieldsBtnActionPerformed
    
    public void clearFields() {
    	//if any input field is empty,show message error message.
    	if (txtID.getText().equals("00000000000000000") && txtSensorCode.getText().equals("") && txtFloorNo.getText().equals("") && txtRoomNo.getText().equals("") && 
    			txtSmokeLevel.getValue().toString().equals("") && txtCO2Level.getValue().toString().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Already Fields are Empty", "Empty Fields", JOptionPane.INFORMATION_MESSAGE);
        }    
        else{
        	//set defaults values to input fields
            txtID.setText("00000000000000000");
            txtSensorCode.setText("");
            txtFloorNo.setText("");
            txtRoomNo.setText("");
            txtSmokeLevel.setValue(1);
            txtCO2Level.setValue(1);
            txtStatus.setSelectedItem("true");
        }
    }

    private void logoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutBtnActionPerformed
    	//User click logout button,then dispose the this main dashboard interface and show login form user interface.
    	userLoginFrame logout = new userLoginFrame();
    	logout.setVisible(true);
    	logout.setLocationRelativeTo(null);
        this.dispose();
    	
    }//GEN-LAST:event_logoutBtnActionPerformed

    private void tableRefreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableRefreshBtnActionPerformed
        //call table load method
    	this.getAllFireAlarmListAndSetTable();
    	
    }//GEN-LAST:event_tableRefreshBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainDashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
                 
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainDashboardFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AlarmListTable;
    private javax.swing.JButton addDetailsBtn;
    private javax.swing.JButton clearFieldsBtn;
    private javax.swing.JButton deleteDetailBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logoutBtn;
    private javax.swing.JButton tableRefreshBtn;
    private javax.swing.JSpinner txtCO2Level;
    private javax.swing.JTextField txtFloorNo;
    private javax.swing.JLabel txtID;
    private javax.swing.JTextField txtRoomNo;
    private javax.swing.JTextField txtSensorCode;
    private javax.swing.JSpinner txtSmokeLevel;
    private javax.swing.JComboBox<String> txtStatus;
    private javax.swing.JButton updateDetailsBtn;
    // End of variables declaration//GEN-END:variables
}
